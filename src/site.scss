/* -- includes --*/
@use "_includes/shared" as *;
@use "_includes/nav";
@use "_includes/landing";
@use "_includes/events";
@use "_includes/event-detail";
@use "_includes/about";
@use "_includes/merch";
@use "_includes/socials";
@use "_includes/under-construction";

/* -- resets (more) -- */
* {
  box-sizing: border-box;
}

body {
  @include background($riso: 2);

  position: relative;
  height: 100vh;
  line-height: 1.2;
  background-attachment: fixed;
  z-index: 0;
}

a:not([class]) {
  color: $black;
  text-decoration-color: $coral;
  text-decoration-thickness: 2px;

  &:hover {
    color: $blue0;
  }
}

a[class] {
  text-decoration: unset;
}

/* -- Page -- */
.Page {
  display: flex;
  overflow: hidden;
  position: relative;
  min-height: 100%;
  font-size: $font-size-base;
  font-family: $font-family;
  z-index: 0;
  transition: opacity 0.1s;
  pointer-events: none;

  &::before {
    content: "";
    flex: 1;
  }

  &::after {
    content: "";
    flex: 1.5;
  }

  &-content {
    max-width: min(100%, 1000px);
    pointer-events: all;
    transform-origin: top left;
    transition: transform 0.8s ease-in-out;

    @include mobile {
      padding: $margin-mobile-vertical $margin-mobile-horizontal;
    }

    @include desktop {
      padding: $margin-desktop-vertical $margin-desktop-horizontal;
    }
  }

  $main: null;

  &-main {
    $main: &;

    position: relative;
    margin-top: $spacing3;
    padding: $spacing3 $spacing4;

    @include mobile {
      margin-left: -$margin-mobile-horizontal;
      margin-right: -$margin-mobile-horizontal;
    }

    &::before {
      content: "";

      @include fill();
      @include background();

      box-shadow: 10px 10px 60px $color-shadow-page;
      transform: none;
      transition: transform 1s;
    }
  }

  &-border {
    @include fill();

    transform: none;
    transition: transform 1s;
  }
}

/* -- Core -- */
.Border {
  --border-width: 3px;
  --border-offset: -1.5px;
  --border-dash: 6px;

  @include fill();

  overflow: visible;
  position: absolute;
  top: var(--border-offset);
  left: var(--border-offset);
  width: calc(100% + var(--border-width));
  height: calc(100% + var(--border-width));

  &-rect {
    fill: $clear;
    stroke: $color-border;
    stroke-width: var(--border-width);
    stroke-dasharray: var(--border-dash) var(--border-dash);
    stroke-dashoffset: 0;
  }

  &--white &-rect {
    stroke: $color-border-white;
  }

  &--primary &-rect {
    stroke: $color-border-primary;
  }

  &--rainbow {
    --border-width: 6px;
    --border-offset: -3px;
  }

  &--rainbow &-rect {
    stroke: unset;
    animation:
      BorderMarch 3s linear forwards infinite,
      BorderRainbow 1s linear infinite;
  }

  @keyframes BorderMarch {
    0% {
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dashoffset: -60px;
    }
  }

  @keyframes BorderRainbow {
    0% {
      stroke: #ff0000;
    }
    12.5% {
      stroke: #ffff00;
    }
    37.5% {
      stroke: #00ff00;
    }
    62.5% {
      stroke: #00ffff;
    }
    87.5% {
      stroke: #ff00ff;
    }
    100% {
      stroke: #ff0000;
    }
  }
}

/* -- Loading -- */
.Loading {
  position: fixed;
  top: 0;
  left: 0;
  width: 0%;
  height: 5px;
  background-color: $blue0;
  z-index: 2;
}

.Loading.is-loading {
  width: 66%;
  animation: Loading, Loading-wait;
  animation-duration: 1s, 1s;
  animation-delay: 0s, 1s;
  animation-iteration-count: 1, infinite;
  animation-timing-function: initial, ease-in-out;
  animation-direction: normal, alternate;
}

@keyframes Loading {
  from {
    width: 0%;
  }
  to {
    width: 69%;
  }
}

@keyframes Loading-wait {
  from {
    width: 69%;
  }
  to {
    width: 69.5%;
  }
}
